import axios from "axios";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useState } from "react";
import styles from "../styles/Home.module.css";

export default function Login() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const router = useRouter();

  // Methods
  const login = async (evt) => {
    evt.preventDefault();
    const { data } = await axios.post("/api", {
      email,
      password,
    });
    console.log(data);
    if (!data.token) alert("Login Failed!");
    else router.push("/app");
  };

  const onInput = (value, setValue) => {
    setValue(value);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Login Page</h1>
        <form className={styles.title} onSubmit={(evt) => login(evt)}>
          <input
            type="email"
            name="email"
            placeholder="Email"
            id="email"
            onInput={(evt) => onInput(evt.target.value, setEmail)}
          />
          <input
            type="password"
            name="password"
            placeholder="Password"
            id="password"
            onInput={(evt) => onInput(evt.target.value, setPassword)}
          />
          <button type="submit">Login</button>
        </form>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export async function getServerSideProps({ req }) {
  let result = { props: {} };
  if (req.cookies.token)
    result = {
      ...result,
      redirect: {
        permanent: false,
        destination: "/app",
      },
    };
  return result;
}
